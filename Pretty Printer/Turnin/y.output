Terminals which are not used

   RWEXIT
   RWCOUNTING
   RWUPWARD
   RWDOWNWARD
   RWTO
   VARIABLE


Grammar

    0 $accept: program $end

    1 program: headingstmt datasection algsection

    2 headingstmt: RWMAIN SEMICOLON

    3 datasection: RWDATA COLON
    4            | RWDATA COLON decstmtlist

    5 decstmtlist: decstmtlist decstmt
    6            | decstmt

    7 decstmt: RWINT COLON varlist
    8        | RWREAL COLON varlist

    9 varlist: varref COMMA varlist
   10        | varref SEMICOLON

   11 varref: VAR
   12       | VAR LBRACK LITINT RBRACK

   13 algsection: RWALG COLON programbody endmainstmt

   14 programbody: assignstmt programbody
   15            | assignstmt
   16            | controlstmt programbody
   17            | controlstmt
   18            | outputstmt programbody
   19            | outputstmt
   20            | inputstmt programbody
   21            | inputstmt
   22            | whilestmt programbody
   23            | whilestmt

   24 assignstmt: VAR assign bexp SEMICOLON
   25           | VAR LBRACK LITINT RBRACK assign bexp SEMICOLON

   26 assign: ASSIGNOP

   27 bexp: bexp AND rexp
   28     | bexp OR rexp
   29     | NOT rexp
   30     | rexp

   31 rexp: rexp LESS exp
   32     | rexp LESSEQU exp
   33     | rexp GREATER exp
   34     | rexp GREATEQU exp
   35     | rexp EQUAL exp
   36     | rexp NOTEQUAL exp
   37     | exp

   38 exp: exp ADD term
   39    | exp MINUS term
   40    | term

   41 term: term MULT factor
   42     | term DIV factor
   43     | factor

   44 factor: MINUS unit
   45       | unit

   46 unit: LITINT
   47     | LITREAL
   48     | LPAREN bexp RPAREN
   49     | VAR
   50     | VAR LBRACK LITINT RBRACK

   51 outputstmt: RWPRINT printlist

   52 printlist: CHARSTRING printlist
   53          | CHARSTRING COMMA printlist
   54          | CARRETURN printlist
   55          | CARRETURN COMMA printlist
   56          | bexp COMMA printlist
   57          | bexp SEMICOLON
   58          | SEMICOLON

   59 inputstmt: RWREAD varref SEMICOLON

   60 controlstmt: RWIF bexp SEMICOLON programbody RWEND RWIF SEMICOLON
   61            | RWIF bexp SEMICOLON programbody RWELSE SEMICOLON programbody RWEND RWIF SEMICOLON

   62 whilestmt: RWWHILE bexp SEMICOLON programbody RWEND RWWHILE SEMICOLON

   63 endmainstmt: RWEND RWMAIN SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
RWMAIN (258) 2 63
RWEXIT (259)
RWIF (260) 60 61
RWELSE (261) 61
RWWHILE (262) 62
RWCOUNTING (263)
RWEND (264) 60 61 62 63
RWDATA (265) 3 4
RWALG (266) 13
LITINT (267) 12 25 46 50
LITREAL (268) 47
RWINT (269) 7
RWREAL (270) 8
RWUPWARD (271)
RWDOWNWARD (272)
RWTO (273)
RWREAD (274) 59
RWPRINT (275) 51
CHARSTRING (276) 52 53
CARRETURN (277) 54 55
ASSIGNOP (278) 26
COMMA (279) 9 53 55 56
SEMICOLON (280) 2 10 24 25 57 58 59 60 61 62 63
COLON (281) 3 4 7 8 13
LPAREN (282) 48
RPAREN (283) 48
LBRACK (284) 12 25 50
RBRACK (285) 12 25 50
ADD (286) 38
MINUS (287) 39 44
MULT (288) 41
DIV (289) 42
LESS (290) 31
GREATER (291) 33
LESSEQU (292) 32
GREATEQU (293) 34
EQUAL (294) 35
NOTEQUAL (295) 36
AND (296) 27
OR (297) 28
NOT (298) 29
VAR (299) 11 12 24 25 49 50
VARIABLE (300)


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
program (47)
    on left: 1, on right: 0
headingstmt (48)
    on left: 2, on right: 1
datasection (49)
    on left: 3 4, on right: 1
decstmtlist (50)
    on left: 5 6, on right: 4 5
decstmt (51)
    on left: 7 8, on right: 5 6
varlist (52)
    on left: 9 10, on right: 7 8 9
varref (53)
    on left: 11 12, on right: 9 10 59
algsection (54)
    on left: 13, on right: 1
programbody (55)
    on left: 14 15 16 17 18 19 20 21 22 23, on right: 13 14 16 18 20
    22 60 61 62
assignstmt (56)
    on left: 24 25, on right: 14 15
assign (57)
    on left: 26, on right: 24 25
bexp (58)
    on left: 27 28 29 30, on right: 24 25 27 28 48 56 57 60 61 62
rexp (59)
    on left: 31 32 33 34 35 36 37, on right: 27 28 29 30 31 32 33 34
    35 36
exp (60)
    on left: 38 39 40, on right: 31 32 33 34 35 36 37 38 39
term (61)
    on left: 41 42 43, on right: 38 39 40 41 42
factor (62)
    on left: 44 45, on right: 41 42 43
unit (63)
    on left: 46 47 48 49 50, on right: 44 45
outputstmt (64)
    on left: 51, on right: 18 19
printlist (65)
    on left: 52 53 54 55 56 57 58, on right: 51 52 53 54 55 56
inputstmt (66)
    on left: 59, on right: 20 21
controlstmt (67)
    on left: 60 61, on right: 16 17
whilestmt (68)
    on left: 62, on right: 22 23
endmainstmt (69)
    on left: 63, on right: 13


state 0

    0 $accept: . program $end

    RWMAIN  shift, and go to state 1

    program      go to state 2
    headingstmt  go to state 3


state 1

    2 headingstmt: RWMAIN . SEMICOLON

    SEMICOLON  shift, and go to state 4


state 2

    0 $accept: program . $end

    $end  shift, and go to state 5


state 3

    1 program: headingstmt . datasection algsection

    RWDATA  shift, and go to state 6

    datasection  go to state 7


state 4

    2 headingstmt: RWMAIN SEMICOLON .

    $default  reduce using rule 2 (headingstmt)


state 5

    0 $accept: program $end .

    $default  accept


state 6

    3 datasection: RWDATA . COLON
    4            | RWDATA . COLON decstmtlist

    COLON  shift, and go to state 8


state 7

    1 program: headingstmt datasection . algsection

    RWALG  shift, and go to state 9

    algsection  go to state 10


state 8

    3 datasection: RWDATA COLON .
    4            | RWDATA COLON . decstmtlist

    RWINT   shift, and go to state 11
    RWREAL  shift, and go to state 12

    $default  reduce using rule 3 (datasection)

    decstmtlist  go to state 13
    decstmt      go to state 14


state 9

   13 algsection: RWALG . COLON programbody endmainstmt

    COLON  shift, and go to state 15


state 10

    1 program: headingstmt datasection algsection .

    $default  reduce using rule 1 (program)


state 11

    7 decstmt: RWINT . COLON varlist

    COLON  shift, and go to state 16


state 12

    8 decstmt: RWREAL . COLON varlist

    COLON  shift, and go to state 17


state 13

    4 datasection: RWDATA COLON decstmtlist .
    5 decstmtlist: decstmtlist . decstmt

    RWINT   shift, and go to state 11
    RWREAL  shift, and go to state 12

    $default  reduce using rule 4 (datasection)

    decstmt  go to state 18


state 14

    6 decstmtlist: decstmt .

    $default  reduce using rule 6 (decstmtlist)


state 15

   13 algsection: RWALG COLON . programbody endmainstmt

    RWIF     shift, and go to state 19
    RWWHILE  shift, and go to state 20
    RWREAD   shift, and go to state 21
    RWPRINT  shift, and go to state 22
    VAR      shift, and go to state 23

    programbody  go to state 24
    assignstmt   go to state 25
    outputstmt   go to state 26
    inputstmt    go to state 27
    controlstmt  go to state 28
    whilestmt    go to state 29


state 16

    7 decstmt: RWINT COLON . varlist

    VAR  shift, and go to state 30

    varlist  go to state 31
    varref   go to state 32


state 17

    8 decstmt: RWREAL COLON . varlist

    VAR  shift, and go to state 30

    varlist  go to state 33
    varref   go to state 32


state 18

    5 decstmtlist: decstmtlist decstmt .

    $default  reduce using rule 5 (decstmtlist)


state 19

   60 controlstmt: RWIF . bexp SEMICOLON programbody RWEND RWIF SEMICOLON
   61            | RWIF . bexp SEMICOLON programbody RWELSE SEMICOLON programbody RWEND RWIF SEMICOLON

    LITINT   shift, and go to state 34
    LITREAL  shift, and go to state 35
    LPAREN   shift, and go to state 36
    MINUS    shift, and go to state 37
    NOT      shift, and go to state 38
    VAR      shift, and go to state 39

    bexp    go to state 40
    rexp    go to state 41
    exp     go to state 42
    term    go to state 43
    factor  go to state 44
    unit    go to state 45


state 20

   62 whilestmt: RWWHILE . bexp SEMICOLON programbody RWEND RWWHILE SEMICOLON

    LITINT   shift, and go to state 34
    LITREAL  shift, and go to state 35
    LPAREN   shift, and go to state 36
    MINUS    shift, and go to state 37
    NOT      shift, and go to state 38
    VAR      shift, and go to state 39

    bexp    go to state 46
    rexp    go to state 41
    exp     go to state 42
    term    go to state 43
    factor  go to state 44
    unit    go to state 45


state 21

   59 inputstmt: RWREAD . varref SEMICOLON

    VAR  shift, and go to state 30

    varref  go to state 47


state 22

   51 outputstmt: RWPRINT . printlist

    LITINT      shift, and go to state 34
    LITREAL     shift, and go to state 35
    CHARSTRING  shift, and go to state 48
    CARRETURN   shift, and go to state 49
    SEMICOLON   shift, and go to state 50
    LPAREN      shift, and go to state 36
    MINUS       shift, and go to state 37
    NOT         shift, and go to state 38
    VAR         shift, and go to state 39

    bexp       go to state 51
    rexp       go to state 41
    exp        go to state 42
    term       go to state 43
    factor     go to state 44
    unit       go to state 45
    printlist  go to state 52


state 23

   24 assignstmt: VAR . assign bexp SEMICOLON
   25           | VAR . LBRACK LITINT RBRACK assign bexp SEMICOLON

    ASSIGNOP  shift, and go to state 53
    LBRACK    shift, and go to state 54

    assign  go to state 55


state 24

   13 algsection: RWALG COLON programbody . endmainstmt

    RWEND  shift, and go to state 56

    endmainstmt  go to state 57


state 25

   14 programbody: assignstmt . programbody
   15            | assignstmt .

    RWIF     shift, and go to state 19
    RWWHILE  shift, and go to state 20
    RWREAD   shift, and go to state 21
    RWPRINT  shift, and go to state 22
    VAR      shift, and go to state 23

    $default  reduce using rule 15 (programbody)

    programbody  go to state 58
    assignstmt   go to state 25
    outputstmt   go to state 26
    inputstmt    go to state 27
    controlstmt  go to state 28
    whilestmt    go to state 29


state 26

   18 programbody: outputstmt . programbody
   19            | outputstmt .

    RWIF     shift, and go to state 19
    RWWHILE  shift, and go to state 20
    RWREAD   shift, and go to state 21
    RWPRINT  shift, and go to state 22
    VAR      shift, and go to state 23

    $default  reduce using rule 19 (programbody)

    programbody  go to state 59
    assignstmt   go to state 25
    outputstmt   go to state 26
    inputstmt    go to state 27
    controlstmt  go to state 28
    whilestmt    go to state 29


state 27

   20 programbody: inputstmt . programbody
   21            | inputstmt .

    RWIF     shift, and go to state 19
    RWWHILE  shift, and go to state 20
    RWREAD   shift, and go to state 21
    RWPRINT  shift, and go to state 22
    VAR      shift, and go to state 23

    $default  reduce using rule 21 (programbody)

    programbody  go to state 60
    assignstmt   go to state 25
    outputstmt   go to state 26
    inputstmt    go to state 27
    controlstmt  go to state 28
    whilestmt    go to state 29


state 28

   16 programbody: controlstmt . programbody
   17            | controlstmt .

    RWIF     shift, and go to state 19
    RWWHILE  shift, and go to state 20
    RWREAD   shift, and go to state 21
    RWPRINT  shift, and go to state 22
    VAR      shift, and go to state 23

    $default  reduce using rule 17 (programbody)

    programbody  go to state 61
    assignstmt   go to state 25
    outputstmt   go to state 26
    inputstmt    go to state 27
    controlstmt  go to state 28
    whilestmt    go to state 29


state 29

   22 programbody: whilestmt . programbody
   23            | whilestmt .

    RWIF     shift, and go to state 19
    RWWHILE  shift, and go to state 20
    RWREAD   shift, and go to state 21
    RWPRINT  shift, and go to state 22
    VAR      shift, and go to state 23

    $default  reduce using rule 23 (programbody)

    programbody  go to state 62
    assignstmt   go to state 25
    outputstmt   go to state 26
    inputstmt    go to state 27
    controlstmt  go to state 28
    whilestmt    go to state 29


state 30

   11 varref: VAR .
   12       | VAR . LBRACK LITINT RBRACK

    LBRACK  shift, and go to state 63

    $default  reduce using rule 11 (varref)


state 31

    7 decstmt: RWINT COLON varlist .

    $default  reduce using rule 7 (decstmt)


state 32

    9 varlist: varref . COMMA varlist
   10        | varref . SEMICOLON

    COMMA      shift, and go to state 64
    SEMICOLON  shift, and go to state 65


state 33

    8 decstmt: RWREAL COLON varlist .

    $default  reduce using rule 8 (decstmt)


state 34

   46 unit: LITINT .

    $default  reduce using rule 46 (unit)


state 35

   47 unit: LITREAL .

    $default  reduce using rule 47 (unit)


state 36

   48 unit: LPAREN . bexp RPAREN

    LITINT   shift, and go to state 34
    LITREAL  shift, and go to state 35
    LPAREN   shift, and go to state 36
    MINUS    shift, and go to state 37
    NOT      shift, and go to state 38
    VAR      shift, and go to state 39

    bexp    go to state 66
    rexp    go to state 41
    exp     go to state 42
    term    go to state 43
    factor  go to state 44
    unit    go to state 45


state 37

   44 factor: MINUS . unit

    LITINT   shift, and go to state 34
    LITREAL  shift, and go to state 35
    LPAREN   shift, and go to state 36
    VAR      shift, and go to state 39

    unit  go to state 67


state 38

   29 bexp: NOT . rexp

    LITINT   shift, and go to state 34
    LITREAL  shift, and go to state 35
    LPAREN   shift, and go to state 36
    MINUS    shift, and go to state 37
    VAR      shift, and go to state 39

    rexp    go to state 68
    exp     go to state 42
    term    go to state 43
    factor  go to state 44
    unit    go to state 45


state 39

   49 unit: VAR .
   50     | VAR . LBRACK LITINT RBRACK

    LBRACK  shift, and go to state 69

    $default  reduce using rule 49 (unit)


state 40

   27 bexp: bexp . AND rexp
   28     | bexp . OR rexp
   60 controlstmt: RWIF bexp . SEMICOLON programbody RWEND RWIF SEMICOLON
   61            | RWIF bexp . SEMICOLON programbody RWELSE SEMICOLON programbody RWEND RWIF SEMICOLON

    SEMICOLON  shift, and go to state 70
    AND        shift, and go to state 71
    OR         shift, and go to state 72


state 41

   30 bexp: rexp .
   31 rexp: rexp . LESS exp
   32     | rexp . LESSEQU exp
   33     | rexp . GREATER exp
   34     | rexp . GREATEQU exp
   35     | rexp . EQUAL exp
   36     | rexp . NOTEQUAL exp

    LESS      shift, and go to state 73
    GREATER   shift, and go to state 74
    LESSEQU   shift, and go to state 75
    GREATEQU  shift, and go to state 76
    EQUAL     shift, and go to state 77
    NOTEQUAL  shift, and go to state 78

    $default  reduce using rule 30 (bexp)


state 42

   37 rexp: exp .
   38 exp: exp . ADD term
   39    | exp . MINUS term

    ADD    shift, and go to state 79
    MINUS  shift, and go to state 80

    $default  reduce using rule 37 (rexp)


state 43

   40 exp: term .
   41 term: term . MULT factor
   42     | term . DIV factor

    MULT  shift, and go to state 81
    DIV   shift, and go to state 82

    $default  reduce using rule 40 (exp)


state 44

   43 term: factor .

    $default  reduce using rule 43 (term)


state 45

   45 factor: unit .

    $default  reduce using rule 45 (factor)


state 46

   27 bexp: bexp . AND rexp
   28     | bexp . OR rexp
   62 whilestmt: RWWHILE bexp . SEMICOLON programbody RWEND RWWHILE SEMICOLON

    SEMICOLON  shift, and go to state 83
    AND        shift, and go to state 71
    OR         shift, and go to state 72


state 47

   59 inputstmt: RWREAD varref . SEMICOLON

    SEMICOLON  shift, and go to state 84


state 48

   52 printlist: CHARSTRING . printlist
   53          | CHARSTRING . COMMA printlist

    LITINT      shift, and go to state 34
    LITREAL     shift, and go to state 35
    CHARSTRING  shift, and go to state 48
    CARRETURN   shift, and go to state 49
    COMMA       shift, and go to state 85
    SEMICOLON   shift, and go to state 50
    LPAREN      shift, and go to state 36
    MINUS       shift, and go to state 37
    NOT         shift, and go to state 38
    VAR         shift, and go to state 39

    bexp       go to state 51
    rexp       go to state 41
    exp        go to state 42
    term       go to state 43
    factor     go to state 44
    unit       go to state 45
    printlist  go to state 86


state 49

   54 printlist: CARRETURN . printlist
   55          | CARRETURN . COMMA printlist

    LITINT      shift, and go to state 34
    LITREAL     shift, and go to state 35
    CHARSTRING  shift, and go to state 48
    CARRETURN   shift, and go to state 49
    COMMA       shift, and go to state 87
    SEMICOLON   shift, and go to state 50
    LPAREN      shift, and go to state 36
    MINUS       shift, and go to state 37
    NOT         shift, and go to state 38
    VAR         shift, and go to state 39

    bexp       go to state 51
    rexp       go to state 41
    exp        go to state 42
    term       go to state 43
    factor     go to state 44
    unit       go to state 45
    printlist  go to state 88


state 50

   58 printlist: SEMICOLON .

    $default  reduce using rule 58 (printlist)


state 51

   27 bexp: bexp . AND rexp
   28     | bexp . OR rexp
   56 printlist: bexp . COMMA printlist
   57          | bexp . SEMICOLON

    COMMA      shift, and go to state 89
    SEMICOLON  shift, and go to state 90
    AND        shift, and go to state 71
    OR         shift, and go to state 72


state 52

   51 outputstmt: RWPRINT printlist .

    $default  reduce using rule 51 (outputstmt)


state 53

   26 assign: ASSIGNOP .

    $default  reduce using rule 26 (assign)


state 54

   25 assignstmt: VAR LBRACK . LITINT RBRACK assign bexp SEMICOLON

    LITINT  shift, and go to state 91


state 55

   24 assignstmt: VAR assign . bexp SEMICOLON

    LITINT   shift, and go to state 34
    LITREAL  shift, and go to state 35
    LPAREN   shift, and go to state 36
    MINUS    shift, and go to state 37
    NOT      shift, and go to state 38
    VAR      shift, and go to state 39

    bexp    go to state 92
    rexp    go to state 41
    exp     go to state 42
    term    go to state 43
    factor  go to state 44
    unit    go to state 45


state 56

   63 endmainstmt: RWEND . RWMAIN SEMICOLON

    RWMAIN  shift, and go to state 93


state 57

   13 algsection: RWALG COLON programbody endmainstmt .

    $default  reduce using rule 13 (algsection)


state 58

   14 programbody: assignstmt programbody .

    $default  reduce using rule 14 (programbody)


state 59

   18 programbody: outputstmt programbody .

    $default  reduce using rule 18 (programbody)


state 60

   20 programbody: inputstmt programbody .

    $default  reduce using rule 20 (programbody)


state 61

   16 programbody: controlstmt programbody .

    $default  reduce using rule 16 (programbody)


state 62

   22 programbody: whilestmt programbody .

    $default  reduce using rule 22 (programbody)


state 63

   12 varref: VAR LBRACK . LITINT RBRACK

    LITINT  shift, and go to state 94


state 64

    9 varlist: varref COMMA . varlist

    VAR  shift, and go to state 30

    varlist  go to state 95
    varref   go to state 32


state 65

   10 varlist: varref SEMICOLON .

    $default  reduce using rule 10 (varlist)


state 66

   27 bexp: bexp . AND rexp
   28     | bexp . OR rexp
   48 unit: LPAREN bexp . RPAREN

    RPAREN  shift, and go to state 96
    AND     shift, and go to state 71
    OR      shift, and go to state 72


state 67

   44 factor: MINUS unit .

    $default  reduce using rule 44 (factor)


state 68

   29 bexp: NOT rexp .
   31 rexp: rexp . LESS exp
   32     | rexp . LESSEQU exp
   33     | rexp . GREATER exp
   34     | rexp . GREATEQU exp
   35     | rexp . EQUAL exp
   36     | rexp . NOTEQUAL exp

    LESS      shift, and go to state 73
    GREATER   shift, and go to state 74
    LESSEQU   shift, and go to state 75
    GREATEQU  shift, and go to state 76
    EQUAL     shift, and go to state 77
    NOTEQUAL  shift, and go to state 78

    $default  reduce using rule 29 (bexp)


state 69

   50 unit: VAR LBRACK . LITINT RBRACK

    LITINT  shift, and go to state 97


state 70

   60 controlstmt: RWIF bexp SEMICOLON . programbody RWEND RWIF SEMICOLON
   61            | RWIF bexp SEMICOLON . programbody RWELSE SEMICOLON programbody RWEND RWIF SEMICOLON

    RWIF     shift, and go to state 19
    RWWHILE  shift, and go to state 20
    RWREAD   shift, and go to state 21
    RWPRINT  shift, and go to state 22
    VAR      shift, and go to state 23

    programbody  go to state 98
    assignstmt   go to state 25
    outputstmt   go to state 26
    inputstmt    go to state 27
    controlstmt  go to state 28
    whilestmt    go to state 29


state 71

   27 bexp: bexp AND . rexp

    LITINT   shift, and go to state 34
    LITREAL  shift, and go to state 35
    LPAREN   shift, and go to state 36
    MINUS    shift, and go to state 37
    VAR      shift, and go to state 39

    rexp    go to state 99
    exp     go to state 42
    term    go to state 43
    factor  go to state 44
    unit    go to state 45


state 72

   28 bexp: bexp OR . rexp

    LITINT   shift, and go to state 34
    LITREAL  shift, and go to state 35
    LPAREN   shift, and go to state 36
    MINUS    shift, and go to state 37
    VAR      shift, and go to state 39

    rexp    go to state 100
    exp     go to state 42
    term    go to state 43
    factor  go to state 44
    unit    go to state 45


state 73

   31 rexp: rexp LESS . exp

    LITINT   shift, and go to state 34
    LITREAL  shift, and go to state 35
    LPAREN   shift, and go to state 36
    MINUS    shift, and go to state 37
    VAR      shift, and go to state 39

    exp     go to state 101
    term    go to state 43
    factor  go to state 44
    unit    go to state 45


state 74

   33 rexp: rexp GREATER . exp

    LITINT   shift, and go to state 34
    LITREAL  shift, and go to state 35
    LPAREN   shift, and go to state 36
    MINUS    shift, and go to state 37
    VAR      shift, and go to state 39

    exp     go to state 102
    term    go to state 43
    factor  go to state 44
    unit    go to state 45


state 75

   32 rexp: rexp LESSEQU . exp

    LITINT   shift, and go to state 34
    LITREAL  shift, and go to state 35
    LPAREN   shift, and go to state 36
    MINUS    shift, and go to state 37
    VAR      shift, and go to state 39

    exp     go to state 103
    term    go to state 43
    factor  go to state 44
    unit    go to state 45


state 76

   34 rexp: rexp GREATEQU . exp

    LITINT   shift, and go to state 34
    LITREAL  shift, and go to state 35
    LPAREN   shift, and go to state 36
    MINUS    shift, and go to state 37
    VAR      shift, and go to state 39

    exp     go to state 104
    term    go to state 43
    factor  go to state 44
    unit    go to state 45


state 77

   35 rexp: rexp EQUAL . exp

    LITINT   shift, and go to state 34
    LITREAL  shift, and go to state 35
    LPAREN   shift, and go to state 36
    MINUS    shift, and go to state 37
    VAR      shift, and go to state 39

    exp     go to state 105
    term    go to state 43
    factor  go to state 44
    unit    go to state 45


state 78

   36 rexp: rexp NOTEQUAL . exp

    LITINT   shift, and go to state 34
    LITREAL  shift, and go to state 35
    LPAREN   shift, and go to state 36
    MINUS    shift, and go to state 37
    VAR      shift, and go to state 39

    exp     go to state 106
    term    go to state 43
    factor  go to state 44
    unit    go to state 45


state 79

   38 exp: exp ADD . term

    LITINT   shift, and go to state 34
    LITREAL  shift, and go to state 35
    LPAREN   shift, and go to state 36
    MINUS    shift, and go to state 37
    VAR      shift, and go to state 39

    term    go to state 107
    factor  go to state 44
    unit    go to state 45


state 80

   39 exp: exp MINUS . term

    LITINT   shift, and go to state 34
    LITREAL  shift, and go to state 35
    LPAREN   shift, and go to state 36
    MINUS    shift, and go to state 37
    VAR      shift, and go to state 39

    term    go to state 108
    factor  go to state 44
    unit    go to state 45


state 81

   41 term: term MULT . factor

    LITINT   shift, and go to state 34
    LITREAL  shift, and go to state 35
    LPAREN   shift, and go to state 36
    MINUS    shift, and go to state 37
    VAR      shift, and go to state 39

    factor  go to state 109
    unit    go to state 45


state 82

   42 term: term DIV . factor

    LITINT   shift, and go to state 34
    LITREAL  shift, and go to state 35
    LPAREN   shift, and go to state 36
    MINUS    shift, and go to state 37
    VAR      shift, and go to state 39

    factor  go to state 110
    unit    go to state 45


state 83

   62 whilestmt: RWWHILE bexp SEMICOLON . programbody RWEND RWWHILE SEMICOLON

    RWIF     shift, and go to state 19
    RWWHILE  shift, and go to state 20
    RWREAD   shift, and go to state 21
    RWPRINT  shift, and go to state 22
    VAR      shift, and go to state 23

    programbody  go to state 111
    assignstmt   go to state 25
    outputstmt   go to state 26
    inputstmt    go to state 27
    controlstmt  go to state 28
    whilestmt    go to state 29


state 84

   59 inputstmt: RWREAD varref SEMICOLON .

    $default  reduce using rule 59 (inputstmt)


state 85

   53 printlist: CHARSTRING COMMA . printlist

    LITINT      shift, and go to state 34
    LITREAL     shift, and go to state 35
    CHARSTRING  shift, and go to state 48
    CARRETURN   shift, and go to state 49
    SEMICOLON   shift, and go to state 50
    LPAREN      shift, and go to state 36
    MINUS       shift, and go to state 37
    NOT         shift, and go to state 38
    VAR         shift, and go to state 39

    bexp       go to state 51
    rexp       go to state 41
    exp        go to state 42
    term       go to state 43
    factor     go to state 44
    unit       go to state 45
    printlist  go to state 112


state 86

   52 printlist: CHARSTRING printlist .

    $default  reduce using rule 52 (printlist)


state 87

   55 printlist: CARRETURN COMMA . printlist

    LITINT      shift, and go to state 34
    LITREAL     shift, and go to state 35
    CHARSTRING  shift, and go to state 48
    CARRETURN   shift, and go to state 49
    SEMICOLON   shift, and go to state 50
    LPAREN      shift, and go to state 36
    MINUS       shift, and go to state 37
    NOT         shift, and go to state 38
    VAR         shift, and go to state 39

    bexp       go to state 51
    rexp       go to state 41
    exp        go to state 42
    term       go to state 43
    factor     go to state 44
    unit       go to state 45
    printlist  go to state 113


state 88

   54 printlist: CARRETURN printlist .

    $default  reduce using rule 54 (printlist)


state 89

   56 printlist: bexp COMMA . printlist

    LITINT      shift, and go to state 34
    LITREAL     shift, and go to state 35
    CHARSTRING  shift, and go to state 48
    CARRETURN   shift, and go to state 49
    SEMICOLON   shift, and go to state 50
    LPAREN      shift, and go to state 36
    MINUS       shift, and go to state 37
    NOT         shift, and go to state 38
    VAR         shift, and go to state 39

    bexp       go to state 51
    rexp       go to state 41
    exp        go to state 42
    term       go to state 43
    factor     go to state 44
    unit       go to state 45
    printlist  go to state 114


state 90

   57 printlist: bexp SEMICOLON .

    $default  reduce using rule 57 (printlist)


state 91

   25 assignstmt: VAR LBRACK LITINT . RBRACK assign bexp SEMICOLON

    RBRACK  shift, and go to state 115


state 92

   24 assignstmt: VAR assign bexp . SEMICOLON
   27 bexp: bexp . AND rexp
   28     | bexp . OR rexp

    SEMICOLON  shift, and go to state 116
    AND        shift, and go to state 71
    OR         shift, and go to state 72


state 93

   63 endmainstmt: RWEND RWMAIN . SEMICOLON

    SEMICOLON  shift, and go to state 117


state 94

   12 varref: VAR LBRACK LITINT . RBRACK

    RBRACK  shift, and go to state 118


state 95

    9 varlist: varref COMMA varlist .

    $default  reduce using rule 9 (varlist)


state 96

   48 unit: LPAREN bexp RPAREN .

    $default  reduce using rule 48 (unit)


state 97

   50 unit: VAR LBRACK LITINT . RBRACK

    RBRACK  shift, and go to state 119


state 98

   60 controlstmt: RWIF bexp SEMICOLON programbody . RWEND RWIF SEMICOLON
   61            | RWIF bexp SEMICOLON programbody . RWELSE SEMICOLON programbody RWEND RWIF SEMICOLON

    RWELSE  shift, and go to state 120
    RWEND   shift, and go to state 121


state 99

   27 bexp: bexp AND rexp .
   31 rexp: rexp . LESS exp
   32     | rexp . LESSEQU exp
   33     | rexp . GREATER exp
   34     | rexp . GREATEQU exp
   35     | rexp . EQUAL exp
   36     | rexp . NOTEQUAL exp

    LESS      shift, and go to state 73
    GREATER   shift, and go to state 74
    LESSEQU   shift, and go to state 75
    GREATEQU  shift, and go to state 76
    EQUAL     shift, and go to state 77
    NOTEQUAL  shift, and go to state 78

    $default  reduce using rule 27 (bexp)


state 100

   28 bexp: bexp OR rexp .
   31 rexp: rexp . LESS exp
   32     | rexp . LESSEQU exp
   33     | rexp . GREATER exp
   34     | rexp . GREATEQU exp
   35     | rexp . EQUAL exp
   36     | rexp . NOTEQUAL exp

    LESS      shift, and go to state 73
    GREATER   shift, and go to state 74
    LESSEQU   shift, and go to state 75
    GREATEQU  shift, and go to state 76
    EQUAL     shift, and go to state 77
    NOTEQUAL  shift, and go to state 78

    $default  reduce using rule 28 (bexp)


state 101

   31 rexp: rexp LESS exp .
   38 exp: exp . ADD term
   39    | exp . MINUS term

    ADD    shift, and go to state 79
    MINUS  shift, and go to state 80

    $default  reduce using rule 31 (rexp)


state 102

   33 rexp: rexp GREATER exp .
   38 exp: exp . ADD term
   39    | exp . MINUS term

    ADD    shift, and go to state 79
    MINUS  shift, and go to state 80

    $default  reduce using rule 33 (rexp)


state 103

   32 rexp: rexp LESSEQU exp .
   38 exp: exp . ADD term
   39    | exp . MINUS term

    ADD    shift, and go to state 79
    MINUS  shift, and go to state 80

    $default  reduce using rule 32 (rexp)


state 104

   34 rexp: rexp GREATEQU exp .
   38 exp: exp . ADD term
   39    | exp . MINUS term

    ADD    shift, and go to state 79
    MINUS  shift, and go to state 80

    $default  reduce using rule 34 (rexp)


state 105

   35 rexp: rexp EQUAL exp .
   38 exp: exp . ADD term
   39    | exp . MINUS term

    ADD    shift, and go to state 79
    MINUS  shift, and go to state 80

    $default  reduce using rule 35 (rexp)


state 106

   36 rexp: rexp NOTEQUAL exp .
   38 exp: exp . ADD term
   39    | exp . MINUS term

    ADD    shift, and go to state 79
    MINUS  shift, and go to state 80

    $default  reduce using rule 36 (rexp)


state 107

   38 exp: exp ADD term .
   41 term: term . MULT factor
   42     | term . DIV factor

    MULT  shift, and go to state 81
    DIV   shift, and go to state 82

    $default  reduce using rule 38 (exp)


state 108

   39 exp: exp MINUS term .
   41 term: term . MULT factor
   42     | term . DIV factor

    MULT  shift, and go to state 81
    DIV   shift, and go to state 82

    $default  reduce using rule 39 (exp)


state 109

   41 term: term MULT factor .

    $default  reduce using rule 41 (term)


state 110

   42 term: term DIV factor .

    $default  reduce using rule 42 (term)


state 111

   62 whilestmt: RWWHILE bexp SEMICOLON programbody . RWEND RWWHILE SEMICOLON

    RWEND  shift, and go to state 122


state 112

   53 printlist: CHARSTRING COMMA printlist .

    $default  reduce using rule 53 (printlist)


state 113

   55 printlist: CARRETURN COMMA printlist .

    $default  reduce using rule 55 (printlist)


state 114

   56 printlist: bexp COMMA printlist .

    $default  reduce using rule 56 (printlist)


state 115

   25 assignstmt: VAR LBRACK LITINT RBRACK . assign bexp SEMICOLON

    ASSIGNOP  shift, and go to state 53

    assign  go to state 123


state 116

   24 assignstmt: VAR assign bexp SEMICOLON .

    $default  reduce using rule 24 (assignstmt)


state 117

   63 endmainstmt: RWEND RWMAIN SEMICOLON .

    $default  reduce using rule 63 (endmainstmt)


state 118

   12 varref: VAR LBRACK LITINT RBRACK .

    $default  reduce using rule 12 (varref)


state 119

   50 unit: VAR LBRACK LITINT RBRACK .

    $default  reduce using rule 50 (unit)


state 120

   61 controlstmt: RWIF bexp SEMICOLON programbody RWELSE . SEMICOLON programbody RWEND RWIF SEMICOLON

    SEMICOLON  shift, and go to state 124


state 121

   60 controlstmt: RWIF bexp SEMICOLON programbody RWEND . RWIF SEMICOLON

    RWIF  shift, and go to state 125


state 122

   62 whilestmt: RWWHILE bexp SEMICOLON programbody RWEND . RWWHILE SEMICOLON

    RWWHILE  shift, and go to state 126


state 123

   25 assignstmt: VAR LBRACK LITINT RBRACK assign . bexp SEMICOLON

    LITINT   shift, and go to state 34
    LITREAL  shift, and go to state 35
    LPAREN   shift, and go to state 36
    MINUS    shift, and go to state 37
    NOT      shift, and go to state 38
    VAR      shift, and go to state 39

    bexp    go to state 127
    rexp    go to state 41
    exp     go to state 42
    term    go to state 43
    factor  go to state 44
    unit    go to state 45


state 124

   61 controlstmt: RWIF bexp SEMICOLON programbody RWELSE SEMICOLON . programbody RWEND RWIF SEMICOLON

    RWIF     shift, and go to state 19
    RWWHILE  shift, and go to state 20
    RWREAD   shift, and go to state 21
    RWPRINT  shift, and go to state 22
    VAR      shift, and go to state 23

    programbody  go to state 128
    assignstmt   go to state 25
    outputstmt   go to state 26
    inputstmt    go to state 27
    controlstmt  go to state 28
    whilestmt    go to state 29


state 125

   60 controlstmt: RWIF bexp SEMICOLON programbody RWEND RWIF . SEMICOLON

    SEMICOLON  shift, and go to state 129


state 126

   62 whilestmt: RWWHILE bexp SEMICOLON programbody RWEND RWWHILE . SEMICOLON

    SEMICOLON  shift, and go to state 130


state 127

   25 assignstmt: VAR LBRACK LITINT RBRACK assign bexp . SEMICOLON
   27 bexp: bexp . AND rexp
   28     | bexp . OR rexp

    SEMICOLON  shift, and go to state 131
    AND        shift, and go to state 71
    OR         shift, and go to state 72


state 128

   61 controlstmt: RWIF bexp SEMICOLON programbody RWELSE SEMICOLON programbody . RWEND RWIF SEMICOLON

    RWEND  shift, and go to state 132


state 129

   60 controlstmt: RWIF bexp SEMICOLON programbody RWEND RWIF SEMICOLON .

    $default  reduce using rule 60 (controlstmt)


state 130

   62 whilestmt: RWWHILE bexp SEMICOLON programbody RWEND RWWHILE SEMICOLON .

    $default  reduce using rule 62 (whilestmt)


state 131

   25 assignstmt: VAR LBRACK LITINT RBRACK assign bexp SEMICOLON .

    $default  reduce using rule 25 (assignstmt)


state 132

   61 controlstmt: RWIF bexp SEMICOLON programbody RWELSE SEMICOLON programbody RWEND . RWIF SEMICOLON

    RWIF  shift, and go to state 133


state 133

   61 controlstmt: RWIF bexp SEMICOLON programbody RWELSE SEMICOLON programbody RWEND RWIF . SEMICOLON

    SEMICOLON  shift, and go to state 134


state 134

   61 controlstmt: RWIF bexp SEMICOLON programbody RWELSE SEMICOLON programbody RWEND RWIF SEMICOLON .

    $default  reduce using rule 61 (controlstmt)

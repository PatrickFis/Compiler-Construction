Terminals which are not used

   RWEXIT
   RWWHILE
   RWCOUNTING
   RWUPWARD
   RWDOWNWARD
   RWTO
   VARIABLE


Grammar

    0 $accept: program $end

    1 program: headingstmt datasection algsection

    2 headingstmt: RWMAIN SEMICOLON

    3 datasection: RWDATA COLON
    4            | RWDATA COLON decstmtlist

    5 decstmtlist: decstmtlist decstmt
    6            | decstmt

    7 decstmt: RWINT COLON varlist
    8        | RWREAL COLON varlist

    9 varlist: varref COMMA varlist
   10        | varref SEMICOLON

   11 varref: VAR
   12       | VAR LBRACK LITINT RBRACK

   13 algsection: RWALG COLON programbody endmainstmt

   14 programbody: assignstmt programbody
   15            | assignstmt
   16            | controlstmt programbody
   17            | controlstmt
   18            | outputstmt programbody
   19            | outputstmt
   20            | inputstmt programbody
   21            | inputstmt

   22 assignstmt: VAR assign bexp SEMICOLON

   23 assign: ASSIGNOP

   24 bexp: bexp AND rexp
   25     | bexp OR rexp
   26     | NOT rexp
   27     | rexp

   28 rexp: rexp LESS exp
   29     | rexp LESSEQU exp
   30     | rexp GREATER exp
   31     | rexp GREATEQU exp
   32     | rexp EQUAL exp
   33     | rexp NOTEQUAL exp
   34     | exp

   35 exp: exp ADD term
   36    | exp MINUS term
   37    | term

   38 term: term MULT factor
   39     | term DIV factor
   40     | factor

   41 factor: MINUS unit
   42       | unit

   43 unit: LITINT
   44     | LITREAL
   45     | LPAREN bexp RPAREN
   46     | VAR

   47 outputstmt: RWPRINT printlist

   48 printlist: CHARSTRING printlist
   49          | CHARSTRING COMMA printlist
   50          | CARRETURN printlist
   51          | CARRETURN COMMA printlist
   52          | bexp COMMA printlist
   53          | bexp SEMICOLON
   54          | SEMICOLON

   55 inputstmt: RWREAD varref SEMICOLON

   56 controlstmt: RWIF bexp SEMICOLON programbody RWEND RWIF SEMICOLON
   57            | RWIF bexp SEMICOLON programbody RWELSE SEMICOLON programbody RWEND RWIF SEMICOLON

   58 endmainstmt: RWEND RWMAIN SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
RWMAIN (258) 2 58
RWEXIT (259)
RWIF (260) 56 57
RWELSE (261) 57
RWWHILE (262)
RWCOUNTING (263)
RWEND (264) 56 57 58
RWDATA (265) 3 4
RWALG (266) 13
LITINT (267) 12 43
LITREAL (268) 44
RWINT (269) 7
RWREAL (270) 8
RWUPWARD (271)
RWDOWNWARD (272)
RWTO (273)
RWREAD (274) 55
RWPRINT (275) 47
CHARSTRING (276) 48 49
CARRETURN (277) 50 51
ASSIGNOP (278) 23
COMMA (279) 9 49 51 52
SEMICOLON (280) 2 10 22 53 54 55 56 57 58
COLON (281) 3 4 7 8 13
LPAREN (282) 45
RPAREN (283) 45
LBRACK (284) 12
RBRACK (285) 12
ADD (286) 35
MINUS (287) 36 41
MULT (288) 38
DIV (289) 39
LESS (290) 28
GREATER (291) 30
LESSEQU (292) 29
GREATEQU (293) 31
EQUAL (294) 32
NOTEQUAL (295) 33
AND (296) 24
OR (297) 25
NOT (298) 26
VAR (299) 11 12 22 46
VARIABLE (300)


Nonterminals, with rules where they appear

$accept (46)
    on left: 0
program (47)
    on left: 1, on right: 0
headingstmt (48)
    on left: 2, on right: 1
datasection (49)
    on left: 3 4, on right: 1
decstmtlist (50)
    on left: 5 6, on right: 4 5
decstmt (51)
    on left: 7 8, on right: 5 6
varlist (52)
    on left: 9 10, on right: 7 8 9
varref (53)
    on left: 11 12, on right: 9 10 55
algsection (54)
    on left: 13, on right: 1
programbody (55)
    on left: 14 15 16 17 18 19 20 21, on right: 13 14 16 18 20 56 57
assignstmt (56)
    on left: 22, on right: 14 15
assign (57)
    on left: 23, on right: 22
bexp (58)
    on left: 24 25 26 27, on right: 22 24 25 45 52 53 56 57
rexp (59)
    on left: 28 29 30 31 32 33 34, on right: 24 25 26 27 28 29 30 31
    32 33
exp (60)
    on left: 35 36 37, on right: 28 29 30 31 32 33 34 35 36
term (61)
    on left: 38 39 40, on right: 35 36 37 38 39
factor (62)
    on left: 41 42, on right: 38 39 40
unit (63)
    on left: 43 44 45 46, on right: 41 42
outputstmt (64)
    on left: 47, on right: 18 19
printlist (65)
    on left: 48 49 50 51 52 53 54, on right: 47 48 49 50 51 52
inputstmt (66)
    on left: 55, on right: 20 21
controlstmt (67)
    on left: 56 57, on right: 16 17
endmainstmt (68)
    on left: 58, on right: 13


state 0

    0 $accept: . program $end

    RWMAIN  shift, and go to state 1

    program      go to state 2
    headingstmt  go to state 3


state 1

    2 headingstmt: RWMAIN . SEMICOLON

    SEMICOLON  shift, and go to state 4


state 2

    0 $accept: program . $end

    $end  shift, and go to state 5


state 3

    1 program: headingstmt . datasection algsection

    RWDATA  shift, and go to state 6

    datasection  go to state 7


state 4

    2 headingstmt: RWMAIN SEMICOLON .

    $default  reduce using rule 2 (headingstmt)


state 5

    0 $accept: program $end .

    $default  accept


state 6

    3 datasection: RWDATA . COLON
    4            | RWDATA . COLON decstmtlist

    COLON  shift, and go to state 8


state 7

    1 program: headingstmt datasection . algsection

    RWALG  shift, and go to state 9

    algsection  go to state 10


state 8

    3 datasection: RWDATA COLON .
    4            | RWDATA COLON . decstmtlist

    RWINT   shift, and go to state 11
    RWREAL  shift, and go to state 12

    $default  reduce using rule 3 (datasection)

    decstmtlist  go to state 13
    decstmt      go to state 14


state 9

   13 algsection: RWALG . COLON programbody endmainstmt

    COLON  shift, and go to state 15


state 10

    1 program: headingstmt datasection algsection .

    $default  reduce using rule 1 (program)


state 11

    7 decstmt: RWINT . COLON varlist

    COLON  shift, and go to state 16


state 12

    8 decstmt: RWREAL . COLON varlist

    COLON  shift, and go to state 17


state 13

    4 datasection: RWDATA COLON decstmtlist .
    5 decstmtlist: decstmtlist . decstmt

    RWINT   shift, and go to state 11
    RWREAL  shift, and go to state 12

    $default  reduce using rule 4 (datasection)

    decstmt  go to state 18


state 14

    6 decstmtlist: decstmt .

    $default  reduce using rule 6 (decstmtlist)


state 15

   13 algsection: RWALG COLON . programbody endmainstmt

    RWIF     shift, and go to state 19
    RWREAD   shift, and go to state 20
    RWPRINT  shift, and go to state 21
    VAR      shift, and go to state 22

    programbody  go to state 23
    assignstmt   go to state 24
    outputstmt   go to state 25
    inputstmt    go to state 26
    controlstmt  go to state 27


state 16

    7 decstmt: RWINT COLON . varlist

    VAR  shift, and go to state 28

    varlist  go to state 29
    varref   go to state 30


state 17

    8 decstmt: RWREAL COLON . varlist

    VAR  shift, and go to state 28

    varlist  go to state 31
    varref   go to state 30


state 18

    5 decstmtlist: decstmtlist decstmt .

    $default  reduce using rule 5 (decstmtlist)


state 19

   56 controlstmt: RWIF . bexp SEMICOLON programbody RWEND RWIF SEMICOLON
   57            | RWIF . bexp SEMICOLON programbody RWELSE SEMICOLON programbody RWEND RWIF SEMICOLON

    LITINT   shift, and go to state 32
    LITREAL  shift, and go to state 33
    LPAREN   shift, and go to state 34
    MINUS    shift, and go to state 35
    NOT      shift, and go to state 36
    VAR      shift, and go to state 37

    bexp    go to state 38
    rexp    go to state 39
    exp     go to state 40
    term    go to state 41
    factor  go to state 42
    unit    go to state 43


state 20

   55 inputstmt: RWREAD . varref SEMICOLON

    VAR  shift, and go to state 28

    varref  go to state 44


state 21

   47 outputstmt: RWPRINT . printlist

    LITINT      shift, and go to state 32
    LITREAL     shift, and go to state 33
    CHARSTRING  shift, and go to state 45
    CARRETURN   shift, and go to state 46
    SEMICOLON   shift, and go to state 47
    LPAREN      shift, and go to state 34
    MINUS       shift, and go to state 35
    NOT         shift, and go to state 36
    VAR         shift, and go to state 37

    bexp       go to state 48
    rexp       go to state 39
    exp        go to state 40
    term       go to state 41
    factor     go to state 42
    unit       go to state 43
    printlist  go to state 49


state 22

   22 assignstmt: VAR . assign bexp SEMICOLON

    ASSIGNOP  shift, and go to state 50

    assign  go to state 51


state 23

   13 algsection: RWALG COLON programbody . endmainstmt

    RWEND  shift, and go to state 52

    endmainstmt  go to state 53


state 24

   14 programbody: assignstmt . programbody
   15            | assignstmt .

    RWIF     shift, and go to state 19
    RWREAD   shift, and go to state 20
    RWPRINT  shift, and go to state 21
    VAR      shift, and go to state 22

    $default  reduce using rule 15 (programbody)

    programbody  go to state 54
    assignstmt   go to state 24
    outputstmt   go to state 25
    inputstmt    go to state 26
    controlstmt  go to state 27


state 25

   18 programbody: outputstmt . programbody
   19            | outputstmt .

    RWIF     shift, and go to state 19
    RWREAD   shift, and go to state 20
    RWPRINT  shift, and go to state 21
    VAR      shift, and go to state 22

    $default  reduce using rule 19 (programbody)

    programbody  go to state 55
    assignstmt   go to state 24
    outputstmt   go to state 25
    inputstmt    go to state 26
    controlstmt  go to state 27


state 26

   20 programbody: inputstmt . programbody
   21            | inputstmt .

    RWIF     shift, and go to state 19
    RWREAD   shift, and go to state 20
    RWPRINT  shift, and go to state 21
    VAR      shift, and go to state 22

    $default  reduce using rule 21 (programbody)

    programbody  go to state 56
    assignstmt   go to state 24
    outputstmt   go to state 25
    inputstmt    go to state 26
    controlstmt  go to state 27


state 27

   16 programbody: controlstmt . programbody
   17            | controlstmt .

    RWIF     shift, and go to state 19
    RWREAD   shift, and go to state 20
    RWPRINT  shift, and go to state 21
    VAR      shift, and go to state 22

    $default  reduce using rule 17 (programbody)

    programbody  go to state 57
    assignstmt   go to state 24
    outputstmt   go to state 25
    inputstmt    go to state 26
    controlstmt  go to state 27


state 28

   11 varref: VAR .
   12       | VAR . LBRACK LITINT RBRACK

    LBRACK  shift, and go to state 58

    $default  reduce using rule 11 (varref)


state 29

    7 decstmt: RWINT COLON varlist .

    $default  reduce using rule 7 (decstmt)


state 30

    9 varlist: varref . COMMA varlist
   10        | varref . SEMICOLON

    COMMA      shift, and go to state 59
    SEMICOLON  shift, and go to state 60


state 31

    8 decstmt: RWREAL COLON varlist .

    $default  reduce using rule 8 (decstmt)


state 32

   43 unit: LITINT .

    $default  reduce using rule 43 (unit)


state 33

   44 unit: LITREAL .

    $default  reduce using rule 44 (unit)


state 34

   45 unit: LPAREN . bexp RPAREN

    LITINT   shift, and go to state 32
    LITREAL  shift, and go to state 33
    LPAREN   shift, and go to state 34
    MINUS    shift, and go to state 35
    NOT      shift, and go to state 36
    VAR      shift, and go to state 37

    bexp    go to state 61
    rexp    go to state 39
    exp     go to state 40
    term    go to state 41
    factor  go to state 42
    unit    go to state 43


state 35

   41 factor: MINUS . unit

    LITINT   shift, and go to state 32
    LITREAL  shift, and go to state 33
    LPAREN   shift, and go to state 34
    VAR      shift, and go to state 37

    unit  go to state 62


state 36

   26 bexp: NOT . rexp

    LITINT   shift, and go to state 32
    LITREAL  shift, and go to state 33
    LPAREN   shift, and go to state 34
    MINUS    shift, and go to state 35
    VAR      shift, and go to state 37

    rexp    go to state 63
    exp     go to state 40
    term    go to state 41
    factor  go to state 42
    unit    go to state 43


state 37

   46 unit: VAR .

    $default  reduce using rule 46 (unit)


state 38

   24 bexp: bexp . AND rexp
   25     | bexp . OR rexp
   56 controlstmt: RWIF bexp . SEMICOLON programbody RWEND RWIF SEMICOLON
   57            | RWIF bexp . SEMICOLON programbody RWELSE SEMICOLON programbody RWEND RWIF SEMICOLON

    SEMICOLON  shift, and go to state 64
    AND        shift, and go to state 65
    OR         shift, and go to state 66


state 39

   27 bexp: rexp .
   28 rexp: rexp . LESS exp
   29     | rexp . LESSEQU exp
   30     | rexp . GREATER exp
   31     | rexp . GREATEQU exp
   32     | rexp . EQUAL exp
   33     | rexp . NOTEQUAL exp

    LESS      shift, and go to state 67
    GREATER   shift, and go to state 68
    LESSEQU   shift, and go to state 69
    GREATEQU  shift, and go to state 70
    EQUAL     shift, and go to state 71
    NOTEQUAL  shift, and go to state 72

    $default  reduce using rule 27 (bexp)


state 40

   34 rexp: exp .
   35 exp: exp . ADD term
   36    | exp . MINUS term

    ADD    shift, and go to state 73
    MINUS  shift, and go to state 74

    $default  reduce using rule 34 (rexp)


state 41

   37 exp: term .
   38 term: term . MULT factor
   39     | term . DIV factor

    MULT  shift, and go to state 75
    DIV   shift, and go to state 76

    $default  reduce using rule 37 (exp)


state 42

   40 term: factor .

    $default  reduce using rule 40 (term)


state 43

   42 factor: unit .

    $default  reduce using rule 42 (factor)


state 44

   55 inputstmt: RWREAD varref . SEMICOLON

    SEMICOLON  shift, and go to state 77


state 45

   48 printlist: CHARSTRING . printlist
   49          | CHARSTRING . COMMA printlist

    LITINT      shift, and go to state 32
    LITREAL     shift, and go to state 33
    CHARSTRING  shift, and go to state 45
    CARRETURN   shift, and go to state 46
    COMMA       shift, and go to state 78
    SEMICOLON   shift, and go to state 47
    LPAREN      shift, and go to state 34
    MINUS       shift, and go to state 35
    NOT         shift, and go to state 36
    VAR         shift, and go to state 37

    bexp       go to state 48
    rexp       go to state 39
    exp        go to state 40
    term       go to state 41
    factor     go to state 42
    unit       go to state 43
    printlist  go to state 79


state 46

   50 printlist: CARRETURN . printlist
   51          | CARRETURN . COMMA printlist

    LITINT      shift, and go to state 32
    LITREAL     shift, and go to state 33
    CHARSTRING  shift, and go to state 45
    CARRETURN   shift, and go to state 46
    COMMA       shift, and go to state 80
    SEMICOLON   shift, and go to state 47
    LPAREN      shift, and go to state 34
    MINUS       shift, and go to state 35
    NOT         shift, and go to state 36
    VAR         shift, and go to state 37

    bexp       go to state 48
    rexp       go to state 39
    exp        go to state 40
    term       go to state 41
    factor     go to state 42
    unit       go to state 43
    printlist  go to state 81


state 47

   54 printlist: SEMICOLON .

    $default  reduce using rule 54 (printlist)


state 48

   24 bexp: bexp . AND rexp
   25     | bexp . OR rexp
   52 printlist: bexp . COMMA printlist
   53          | bexp . SEMICOLON

    COMMA      shift, and go to state 82
    SEMICOLON  shift, and go to state 83
    AND        shift, and go to state 65
    OR         shift, and go to state 66


state 49

   47 outputstmt: RWPRINT printlist .

    $default  reduce using rule 47 (outputstmt)


state 50

   23 assign: ASSIGNOP .

    $default  reduce using rule 23 (assign)


state 51

   22 assignstmt: VAR assign . bexp SEMICOLON

    LITINT   shift, and go to state 32
    LITREAL  shift, and go to state 33
    LPAREN   shift, and go to state 34
    MINUS    shift, and go to state 35
    NOT      shift, and go to state 36
    VAR      shift, and go to state 37

    bexp    go to state 84
    rexp    go to state 39
    exp     go to state 40
    term    go to state 41
    factor  go to state 42
    unit    go to state 43


state 52

   58 endmainstmt: RWEND . RWMAIN SEMICOLON

    RWMAIN  shift, and go to state 85


state 53

   13 algsection: RWALG COLON programbody endmainstmt .

    $default  reduce using rule 13 (algsection)


state 54

   14 programbody: assignstmt programbody .

    $default  reduce using rule 14 (programbody)


state 55

   18 programbody: outputstmt programbody .

    $default  reduce using rule 18 (programbody)


state 56

   20 programbody: inputstmt programbody .

    $default  reduce using rule 20 (programbody)


state 57

   16 programbody: controlstmt programbody .

    $default  reduce using rule 16 (programbody)


state 58

   12 varref: VAR LBRACK . LITINT RBRACK

    LITINT  shift, and go to state 86


state 59

    9 varlist: varref COMMA . varlist

    VAR  shift, and go to state 28

    varlist  go to state 87
    varref   go to state 30


state 60

   10 varlist: varref SEMICOLON .

    $default  reduce using rule 10 (varlist)


state 61

   24 bexp: bexp . AND rexp
   25     | bexp . OR rexp
   45 unit: LPAREN bexp . RPAREN

    RPAREN  shift, and go to state 88
    AND     shift, and go to state 65
    OR      shift, and go to state 66


state 62

   41 factor: MINUS unit .

    $default  reduce using rule 41 (factor)


state 63

   26 bexp: NOT rexp .
   28 rexp: rexp . LESS exp
   29     | rexp . LESSEQU exp
   30     | rexp . GREATER exp
   31     | rexp . GREATEQU exp
   32     | rexp . EQUAL exp
   33     | rexp . NOTEQUAL exp

    LESS      shift, and go to state 67
    GREATER   shift, and go to state 68
    LESSEQU   shift, and go to state 69
    GREATEQU  shift, and go to state 70
    EQUAL     shift, and go to state 71
    NOTEQUAL  shift, and go to state 72

    $default  reduce using rule 26 (bexp)


state 64

   56 controlstmt: RWIF bexp SEMICOLON . programbody RWEND RWIF SEMICOLON
   57            | RWIF bexp SEMICOLON . programbody RWELSE SEMICOLON programbody RWEND RWIF SEMICOLON

    RWIF     shift, and go to state 19
    RWREAD   shift, and go to state 20
    RWPRINT  shift, and go to state 21
    VAR      shift, and go to state 22

    programbody  go to state 89
    assignstmt   go to state 24
    outputstmt   go to state 25
    inputstmt    go to state 26
    controlstmt  go to state 27


state 65

   24 bexp: bexp AND . rexp

    LITINT   shift, and go to state 32
    LITREAL  shift, and go to state 33
    LPAREN   shift, and go to state 34
    MINUS    shift, and go to state 35
    VAR      shift, and go to state 37

    rexp    go to state 90
    exp     go to state 40
    term    go to state 41
    factor  go to state 42
    unit    go to state 43


state 66

   25 bexp: bexp OR . rexp

    LITINT   shift, and go to state 32
    LITREAL  shift, and go to state 33
    LPAREN   shift, and go to state 34
    MINUS    shift, and go to state 35
    VAR      shift, and go to state 37

    rexp    go to state 91
    exp     go to state 40
    term    go to state 41
    factor  go to state 42
    unit    go to state 43


state 67

   28 rexp: rexp LESS . exp

    LITINT   shift, and go to state 32
    LITREAL  shift, and go to state 33
    LPAREN   shift, and go to state 34
    MINUS    shift, and go to state 35
    VAR      shift, and go to state 37

    exp     go to state 92
    term    go to state 41
    factor  go to state 42
    unit    go to state 43


state 68

   30 rexp: rexp GREATER . exp

    LITINT   shift, and go to state 32
    LITREAL  shift, and go to state 33
    LPAREN   shift, and go to state 34
    MINUS    shift, and go to state 35
    VAR      shift, and go to state 37

    exp     go to state 93
    term    go to state 41
    factor  go to state 42
    unit    go to state 43


state 69

   29 rexp: rexp LESSEQU . exp

    LITINT   shift, and go to state 32
    LITREAL  shift, and go to state 33
    LPAREN   shift, and go to state 34
    MINUS    shift, and go to state 35
    VAR      shift, and go to state 37

    exp     go to state 94
    term    go to state 41
    factor  go to state 42
    unit    go to state 43


state 70

   31 rexp: rexp GREATEQU . exp

    LITINT   shift, and go to state 32
    LITREAL  shift, and go to state 33
    LPAREN   shift, and go to state 34
    MINUS    shift, and go to state 35
    VAR      shift, and go to state 37

    exp     go to state 95
    term    go to state 41
    factor  go to state 42
    unit    go to state 43


state 71

   32 rexp: rexp EQUAL . exp

    LITINT   shift, and go to state 32
    LITREAL  shift, and go to state 33
    LPAREN   shift, and go to state 34
    MINUS    shift, and go to state 35
    VAR      shift, and go to state 37

    exp     go to state 96
    term    go to state 41
    factor  go to state 42
    unit    go to state 43


state 72

   33 rexp: rexp NOTEQUAL . exp

    LITINT   shift, and go to state 32
    LITREAL  shift, and go to state 33
    LPAREN   shift, and go to state 34
    MINUS    shift, and go to state 35
    VAR      shift, and go to state 37

    exp     go to state 97
    term    go to state 41
    factor  go to state 42
    unit    go to state 43


state 73

   35 exp: exp ADD . term

    LITINT   shift, and go to state 32
    LITREAL  shift, and go to state 33
    LPAREN   shift, and go to state 34
    MINUS    shift, and go to state 35
    VAR      shift, and go to state 37

    term    go to state 98
    factor  go to state 42
    unit    go to state 43


state 74

   36 exp: exp MINUS . term

    LITINT   shift, and go to state 32
    LITREAL  shift, and go to state 33
    LPAREN   shift, and go to state 34
    MINUS    shift, and go to state 35
    VAR      shift, and go to state 37

    term    go to state 99
    factor  go to state 42
    unit    go to state 43


state 75

   38 term: term MULT . factor

    LITINT   shift, and go to state 32
    LITREAL  shift, and go to state 33
    LPAREN   shift, and go to state 34
    MINUS    shift, and go to state 35
    VAR      shift, and go to state 37

    factor  go to state 100
    unit    go to state 43


state 76

   39 term: term DIV . factor

    LITINT   shift, and go to state 32
    LITREAL  shift, and go to state 33
    LPAREN   shift, and go to state 34
    MINUS    shift, and go to state 35
    VAR      shift, and go to state 37

    factor  go to state 101
    unit    go to state 43


state 77

   55 inputstmt: RWREAD varref SEMICOLON .

    $default  reduce using rule 55 (inputstmt)


state 78

   49 printlist: CHARSTRING COMMA . printlist

    LITINT      shift, and go to state 32
    LITREAL     shift, and go to state 33
    CHARSTRING  shift, and go to state 45
    CARRETURN   shift, and go to state 46
    SEMICOLON   shift, and go to state 47
    LPAREN      shift, and go to state 34
    MINUS       shift, and go to state 35
    NOT         shift, and go to state 36
    VAR         shift, and go to state 37

    bexp       go to state 48
    rexp       go to state 39
    exp        go to state 40
    term       go to state 41
    factor     go to state 42
    unit       go to state 43
    printlist  go to state 102


state 79

   48 printlist: CHARSTRING printlist .

    $default  reduce using rule 48 (printlist)


state 80

   51 printlist: CARRETURN COMMA . printlist

    LITINT      shift, and go to state 32
    LITREAL     shift, and go to state 33
    CHARSTRING  shift, and go to state 45
    CARRETURN   shift, and go to state 46
    SEMICOLON   shift, and go to state 47
    LPAREN      shift, and go to state 34
    MINUS       shift, and go to state 35
    NOT         shift, and go to state 36
    VAR         shift, and go to state 37

    bexp       go to state 48
    rexp       go to state 39
    exp        go to state 40
    term       go to state 41
    factor     go to state 42
    unit       go to state 43
    printlist  go to state 103


state 81

   50 printlist: CARRETURN printlist .

    $default  reduce using rule 50 (printlist)


state 82

   52 printlist: bexp COMMA . printlist

    LITINT      shift, and go to state 32
    LITREAL     shift, and go to state 33
    CHARSTRING  shift, and go to state 45
    CARRETURN   shift, and go to state 46
    SEMICOLON   shift, and go to state 47
    LPAREN      shift, and go to state 34
    MINUS       shift, and go to state 35
    NOT         shift, and go to state 36
    VAR         shift, and go to state 37

    bexp       go to state 48
    rexp       go to state 39
    exp        go to state 40
    term       go to state 41
    factor     go to state 42
    unit       go to state 43
    printlist  go to state 104


state 83

   53 printlist: bexp SEMICOLON .

    $default  reduce using rule 53 (printlist)


state 84

   22 assignstmt: VAR assign bexp . SEMICOLON
   24 bexp: bexp . AND rexp
   25     | bexp . OR rexp

    SEMICOLON  shift, and go to state 105
    AND        shift, and go to state 65
    OR         shift, and go to state 66


state 85

   58 endmainstmt: RWEND RWMAIN . SEMICOLON

    SEMICOLON  shift, and go to state 106


state 86

   12 varref: VAR LBRACK LITINT . RBRACK

    RBRACK  shift, and go to state 107


state 87

    9 varlist: varref COMMA varlist .

    $default  reduce using rule 9 (varlist)


state 88

   45 unit: LPAREN bexp RPAREN .

    $default  reduce using rule 45 (unit)


state 89

   56 controlstmt: RWIF bexp SEMICOLON programbody . RWEND RWIF SEMICOLON
   57            | RWIF bexp SEMICOLON programbody . RWELSE SEMICOLON programbody RWEND RWIF SEMICOLON

    RWELSE  shift, and go to state 108
    RWEND   shift, and go to state 109


state 90

   24 bexp: bexp AND rexp .
   28 rexp: rexp . LESS exp
   29     | rexp . LESSEQU exp
   30     | rexp . GREATER exp
   31     | rexp . GREATEQU exp
   32     | rexp . EQUAL exp
   33     | rexp . NOTEQUAL exp

    LESS      shift, and go to state 67
    GREATER   shift, and go to state 68
    LESSEQU   shift, and go to state 69
    GREATEQU  shift, and go to state 70
    EQUAL     shift, and go to state 71
    NOTEQUAL  shift, and go to state 72

    $default  reduce using rule 24 (bexp)


state 91

   25 bexp: bexp OR rexp .
   28 rexp: rexp . LESS exp
   29     | rexp . LESSEQU exp
   30     | rexp . GREATER exp
   31     | rexp . GREATEQU exp
   32     | rexp . EQUAL exp
   33     | rexp . NOTEQUAL exp

    LESS      shift, and go to state 67
    GREATER   shift, and go to state 68
    LESSEQU   shift, and go to state 69
    GREATEQU  shift, and go to state 70
    EQUAL     shift, and go to state 71
    NOTEQUAL  shift, and go to state 72

    $default  reduce using rule 25 (bexp)


state 92

   28 rexp: rexp LESS exp .
   35 exp: exp . ADD term
   36    | exp . MINUS term

    ADD    shift, and go to state 73
    MINUS  shift, and go to state 74

    $default  reduce using rule 28 (rexp)


state 93

   30 rexp: rexp GREATER exp .
   35 exp: exp . ADD term
   36    | exp . MINUS term

    ADD    shift, and go to state 73
    MINUS  shift, and go to state 74

    $default  reduce using rule 30 (rexp)


state 94

   29 rexp: rexp LESSEQU exp .
   35 exp: exp . ADD term
   36    | exp . MINUS term

    ADD    shift, and go to state 73
    MINUS  shift, and go to state 74

    $default  reduce using rule 29 (rexp)


state 95

   31 rexp: rexp GREATEQU exp .
   35 exp: exp . ADD term
   36    | exp . MINUS term

    ADD    shift, and go to state 73
    MINUS  shift, and go to state 74

    $default  reduce using rule 31 (rexp)


state 96

   32 rexp: rexp EQUAL exp .
   35 exp: exp . ADD term
   36    | exp . MINUS term

    ADD    shift, and go to state 73
    MINUS  shift, and go to state 74

    $default  reduce using rule 32 (rexp)


state 97

   33 rexp: rexp NOTEQUAL exp .
   35 exp: exp . ADD term
   36    | exp . MINUS term

    ADD    shift, and go to state 73
    MINUS  shift, and go to state 74

    $default  reduce using rule 33 (rexp)


state 98

   35 exp: exp ADD term .
   38 term: term . MULT factor
   39     | term . DIV factor

    MULT  shift, and go to state 75
    DIV   shift, and go to state 76

    $default  reduce using rule 35 (exp)


state 99

   36 exp: exp MINUS term .
   38 term: term . MULT factor
   39     | term . DIV factor

    MULT  shift, and go to state 75
    DIV   shift, and go to state 76

    $default  reduce using rule 36 (exp)


state 100

   38 term: term MULT factor .

    $default  reduce using rule 38 (term)


state 101

   39 term: term DIV factor .

    $default  reduce using rule 39 (term)


state 102

   49 printlist: CHARSTRING COMMA printlist .

    $default  reduce using rule 49 (printlist)


state 103

   51 printlist: CARRETURN COMMA printlist .

    $default  reduce using rule 51 (printlist)


state 104

   52 printlist: bexp COMMA printlist .

    $default  reduce using rule 52 (printlist)


state 105

   22 assignstmt: VAR assign bexp SEMICOLON .

    $default  reduce using rule 22 (assignstmt)


state 106

   58 endmainstmt: RWEND RWMAIN SEMICOLON .

    $default  reduce using rule 58 (endmainstmt)


state 107

   12 varref: VAR LBRACK LITINT RBRACK .

    $default  reduce using rule 12 (varref)


state 108

   57 controlstmt: RWIF bexp SEMICOLON programbody RWELSE . SEMICOLON programbody RWEND RWIF SEMICOLON

    SEMICOLON  shift, and go to state 110


state 109

   56 controlstmt: RWIF bexp SEMICOLON programbody RWEND . RWIF SEMICOLON

    RWIF  shift, and go to state 111


state 110

   57 controlstmt: RWIF bexp SEMICOLON programbody RWELSE SEMICOLON . programbody RWEND RWIF SEMICOLON

    RWIF     shift, and go to state 19
    RWREAD   shift, and go to state 20
    RWPRINT  shift, and go to state 21
    VAR      shift, and go to state 22

    programbody  go to state 112
    assignstmt   go to state 24
    outputstmt   go to state 25
    inputstmt    go to state 26
    controlstmt  go to state 27


state 111

   56 controlstmt: RWIF bexp SEMICOLON programbody RWEND RWIF . SEMICOLON

    SEMICOLON  shift, and go to state 113


state 112

   57 controlstmt: RWIF bexp SEMICOLON programbody RWELSE SEMICOLON programbody . RWEND RWIF SEMICOLON

    RWEND  shift, and go to state 114


state 113

   56 controlstmt: RWIF bexp SEMICOLON programbody RWEND RWIF SEMICOLON .

    $default  reduce using rule 56 (controlstmt)


state 114

   57 controlstmt: RWIF bexp SEMICOLON programbody RWELSE SEMICOLON programbody RWEND . RWIF SEMICOLON

    RWIF  shift, and go to state 115


state 115

   57 controlstmt: RWIF bexp SEMICOLON programbody RWELSE SEMICOLON programbody RWEND RWIF . SEMICOLON

    SEMICOLON  shift, and go to state 116


state 116

   57 controlstmt: RWIF bexp SEMICOLON programbody RWELSE SEMICOLON programbody RWEND RWIF SEMICOLON .

    $default  reduce using rule 57 (controlstmt)
